/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>


/ {

    chosen {
      zmk,battery = &vbatt;
    };

    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
        label = "VBATT";
    };
    

    
    macros {

        e_aig: e_aig {
            label = "e aigu";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LALT &kp E>
                , <&macro_tap &kp F>
                ;
        };

        macro_gt: macro_gt {
            label = "macro_gt";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHIFT>
                , <&macro_tap &kp GRAVE>
                , <&macro_release &kp LSHIFT>
                ;
        };

        macro_lt: macro_lt {
            label = "macro_lt";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp GRAVE>
                ;
        };

         macro_backslash: macro_backslash {
            label = "macro_backslash";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RSHIFT &kp RALT>
                , <&macro_tap &kp PERIOD>
                , <&macro_release &kp RSHIFT &kp RALT>
                ;
        };

        macro_pipe: macro_pipe {
                    label = "macro_pipe";
                    compatible = "zmk,behavior-macro";
                    #binding-cells = <0>;
                    bindings
                        = <&macro_press &kp RSHIFT &kp RALT>
                        , <&macro_tap &kp L>
                        , <&macro_release &kp RSHIFT &kp RALT>
                        ;
                };

        macro_cro_open: macro_cro_open {
            label = "macro_cro_open";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RSHIFT &kp RALT>
                , <&macro_tap &kp N5>
                , <&macro_release &kp RSHIFT &kp RALT>
                ;
        };

        macro_cro_close: macro_cro_close {
            label = "macro_cro_close";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RSHIFT &kp RALT>
                , <&macro_tap &kp MINUS>
                , <&macro_release &kp RSHIFT &kp RALT>
                ;
        };

        macro_acc_open: macro_acc_open {
            label = "macro_acc_open";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RALT>
                , <&macro_tap &kp N5>
                , <&macro_release &kp RALT>
                ;
        };

        macro_acc_close: macro_acc_close {
            label = "macro_acc_close";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RALT>
                , <&macro_tap &kp MINUS>
                , <&macro_release &kp RALT>
                ;
        };


        CST_AT: CST_AT {
            label = "CST_AT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp NON_US_BACKSLASH>
                ;
        };

        CST_HASH: CST_HASH {
            label = "CST_HASH";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHIFT>
                , <&macro_tap &kp NON_US_BACKSLASH>
                , <&macro_release &kp LSHIFT>
                ;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1 ou &  | 2 ou é  | 3 ou "   | 4 ou '   | 5 ou (   |                 | 6 ou §   | 7 ou é    | 8 ou !    | 9 ou ç   |  0 ou à   |   ) ou °  |
// |  TAB  |  Q       |  W      |  E       |  R       |  T       |                 |  Y       |  U        |  I        |  O       |   P       |   ^ ou ¨  |
// |  CTRL |  A       |  S      |  D       |  F       |  G       |                 |  H       |  J        |  K        |  L       |   M       |   ù ou %  |
// |  CMD  |  Z       |  X      |  C       |  V       |  B       |       | |       |  N       | , ou ?    |  ; ou .   | : ou /   |           |           |
//                    | ALT     | {        | LOWER    |  SHIFT   | ENTER | | SPACE | RAISE    | BCSPC     | }         |          |
			bindings = <
    &kp ESC   &kp LS(N1) &kp LS(N2)  &e_aig            &kp LS(N4) &kp LS(N5)                        &kp LS(N6) &kp LS(N7) &kp LS(N8)        &kp LS(N9)    &kp LS(N0)      &kp BSPC
    &kp TAB   &kp A      &kp Z       &kp E             &kp R      &kp T                             &kp Y      &kp U      &kp I             &kp O         &kp P           &kp EQUAL
    &kp LCTRL &kp Q      &kp S       &kp D             &kp F      &kp G                             &kp H      &kp J      &kp K             &kp L         &kp M           &kp SQT
    &kp LCMD  &kp W      &kp X       &kp C             &kp V      &kp B       &none     &none       &kp N      &kp SEMI   &kp COMMA         &kp DOT       &kp SLASH       &kp RIGHT
                         &kp LALT    &kp LBKT          &mo 1      &kp LSHFT   &kp ENTER &kp SPACE   &mo 2      &kp MINUS  &kp RBKT          &kp LEFT
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |        |   #     |  `     |  [          |                   |  F6        |  F7   |  F8              |   F9        |  F10      |  ]        |
// |       | @   |        |         | rename |             |                   |            |  UP   | chrome dev tools | format code | = et +    | - et _    |
// |       |     |        |         |  find  | multi caret |                   | LEFT       | DOWN  |  RIGHT           |  "|"        | x meth    | $ et *    |
// |       |     | x meth | x const | x var  | x field     |        |  | del   | open class |       |                  |  \          |   line up | line down |
//               |        |    [    |        |             |        |  |       |            | ]     |            HOME  |  END        |
			bindings = <
&none                &none      &none           &CST_HASH           &kp BACKSLASH   &macro_cro_open                         &kp F6      &kp F7           &kp F8           &kp F9           &kp F10          &kp LA(BSPC)
&bt BT_NXT           &none      &none           &none               &LS(F6)         &none                                   &none       &kp UP           &LA(LCMD(I))     &LA(LCMD(L))     &none            &none
&none                &none      &none           &none               &LC(LS(F))      &LC(LCMD(G))                            &kp LEFT    &kp DOWN         &kp RIGHT        &kp PIPE         &LA(LCMD(M))     &none
&rgb_ug RGB_TOG      &none      &LA(LCMD(M))    &LA(LCMD(C))        &LA(LCMD(V))    &LA(LCMD(F))     &none         &none    &LCMD(N)    &none            &none            &none            &BACKSLASH       &none
                                &bt BT_CLR      &none               &none           &none            &kp HOME      &kp END  &none       &none            &none            &none         
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

        top_layer {
        // ------------------------------------------------------------------------------------------------------------
        // |       |F1   |  F2 |  F3  |  F4  |  F5   |                   |      |       |       |      |       |       |
        // |  >    |     |     |      |      |       |                   |      |       |       |      |       |       |
        // |       |     |     |      |      |       |                   |      |       |       |      |       |       |
        // |       |     |     |      |      |       |        |  |   <   |      |       |       |      |       |       |
        //               |     |      |      |       |        |  |       |      |       |       |      |
                    bindings = <
        &none                 &kp F1          &kp F2          &kp F3          &kp F4          &kp F5                                     &none      &trans           &trans          &trans    &trans          &trans
        &none                 &none           &none           &none           &none           &none                                      &none      &trans           &trans          &trans    &trans          &trans
        &none                 &rgb_ug RGB_TOG &rgb_ug RGB_EFR &rgb_ug RGB_EFF &rgb_ug RGB_BRD &rgb_ug RGB_BRI                            &none      &trans           &trans          &trans    &trans          &trans
        &none                 &none           &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI       &none    &none       &none      &trans           &trans          &trans    &trans          &trans
                              &none           &none           &none           &none           &none                 &none    &none       &none      &trans           &trans          &trans
                    >;

                    sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

	};
};
